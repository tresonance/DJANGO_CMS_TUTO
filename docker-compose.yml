version: '3'

services:

  # Mysql Service
  db: #MySQL service name, this will also be the host name
    build:
      context: ./mysql_dir
      dockerfile: Dockerfile_mysql
    container_name:  mysql_cont #the name we give to this container
    restart: always #always restart to be sure it is always running
    env_file:
      - ./mysql_dir/my_env/.env #this file has all our nvironment variables
    ports:          #the second 3306 is the container port
      - '3306:3306' #it will be mapped to the first 3306, the host port
    volumes:
      - db_data:/var/lib/mysql #let's persist user data
      - ./mysql_dir/queries/init.sql:/docker-entrypoint-initdb.d/init.sql
    #command: sh -c "grant_mysql_permissions.sh"

  # Django web Service
  web:
    build:
      context: ./my_blog_project #My Django BASE_DIR directory
      dockerfile: Dockerfile_web #The Dockerfile to use
    container_name:  web_cont #The name i give to this container
    env_file:
      - ./my_blog_project/my_env/.env #this file has all our nvironment variables
    command: /bin/sh -c "./bash/wait-for-it.sh -h db -p 3306 --timeout=300 && 
            python /app/manage.py collectstatic --noinput && 
             python /app/manage.py makemigrations && 
             python /app/manage.py migrate && 
             ./bash/create_superuser_dev.sh && 
             python /app/manage.py runserver 0.0.0.0:8000"
    volumes:
      - web_static_volume:/app/staticfiles  #  In Dockerfile_web , i've already copied ./my_django_project/shoplink/static
                                       #  But when i run  python manage.py collectstatic --noinput
                                       #  all the static files are now in static dir (see seetings.py files)
                                       # so i use named volume so ha i share the name with nginx 
                                   
      - web_templates_volume:/app/my_blog_app/templates  # I use the same process as defined above
    ports:
      - "8000:8000"
    depends_on:
      - db

  # NGINX Service
  nginx:
    build:
      context: ./nginx_dir
      dockerfile: Dockerfile_nginx
    container_name:  nginx_cont
    restart: unless-stopped
    volumes:
      - ./nginx_dir/conf_dir:/etc/nginx/conf.d
      - web_static_volume:/app/staticfiles  #  Named volume to share static/or get static dir content from/with web container
      - web_templates_volume:/app/shoplink/templates  # #  Named volume to share templates/or get static dir content from/with web container
    ports:
      - "80:80"
    depends_on:
      - web
    

volumes:
  db_data:
  web_static_volume:  # I Define the named volume  web_static_volume for the static files
  web_templates_volume:  # I Define the named volume web_templates_volume  for the templates
  web_bash_volume: # I define this so that i can use wait-for-it.sh from web service